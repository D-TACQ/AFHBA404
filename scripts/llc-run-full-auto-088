#!/bin/bash
# file PROJECTS/AFHBA404/scripts/llc-run-full-auto-two-076-079
# POST is number of samples in LLC control loop
# TLEN is the transient capture, overrun to make sure LLC terminates
POST=${POST:-100000}
let TLEN="$POST*120/100"

UUT1=acq2106_088
# site1=ACQ424, site5=AO424

echo llc-run-full-auto-088 UUT1=$UUT1 POST=$POST TLEN=$TLEN
export LD_LIBRARY_PATH=/usr/local/mdsplus/lib64/
export acq2106_088_path=andros::/home/dt100/TREES/acq2106_088

# We tested with ACQ2106_088 plugged into AFHBA404 PORT B
# for PORT A set DEVNUM=0
echo "setting DEVNUM=1"
export DEVNUM=1

export EXTCLKDIV=${EXTCLKDIV:-10}

set_clocks() {
	(cd PROJECTS/ACQ400/HAPI/acq400_hapi_tests
#	 SITECLIENT_TRACE=1
	./acq2106_set_sync_role.py \
	--master_clk fp,1000000,1000000 --master_trg=soft --clkdiv=$EXTCLKDIV \
	$UUT1
	)
}
control_program() {
	cd PROJECTS/AFHBA404/LLCONTROL
	#echo CONTROL PROGRAM 01
#	export ZCOPY=1 
# DUP1: index from zero, 1 is CH02
	export DUP1=0
# total SPAD 16 longs, + 16 AI longs
	export NCOLS=32
	export NCHAN=32
	export RTPRIO=40
	export AO_IDENT=1
#	for 1:1 loopback cable, set SIMULATE=0, set FEEDFORWARD, get 32 waveforms.
#	export FEED_FORWARD=2000
# isolcpus=4,5,6,7,8...
# taskset 0x10 means "run on processor 4"
	export TASKSET="taskset 0x10"
	[ "x$TASKSET" != "x" ] && echo TASKSET $TASKSET
	$TASKSET ./afhba-llcontrol-cpucopy $POST &
	echo wait for llcontrol, PID $CTRLPID
	wait
	echo CONTROL PROGRAM 99
	echo $UUT1 $acq2106_088_path
	export STORE_COLS=16,17
	ls -l afhba.$DEVNUM.log
	/home/dt100/bin/mds_put_slice.py --ncols $NCOLS --dtype np.uint32 --store_cols $STORE_COLS \
		--tlatch_report=1 --node_name "CH%02d" --default_node ST \
		$UUT1 afhba.$DEVNUM.log
}

control_script() {
       (cd PROJECTS/AFHBA404/HAPI;
        echo CONTROL SCRIPT 01
#        export SITECLIENT_TRACE=1 
	export AISITES=1
# enable SIMULATE=1 to get some dummay AI data. DO NO use with 1:1 loopback!
#	export SIMULATE=1
        export AOSITES=5
	./llc-test-harness-twobox.py $UUT1
        echo CONTROL SCRIPT 99
       )
       (cd PROJECTS/ACQ400/HAPI/acq400_hapi_tests;
        STATUSMONITOR_TRACE=0 ./acq400_capture.py \
		--transient="PRE=0 POST=$TLEN SOFT_TRIGGER=1" \
		$UUT1
       )
}



case "x$1" in
xset_clocks)
	set_clocks;;
xcontrol_program)
	control_program;;
xcontrol_script)
	control_script;;
*)
#	set_clocks
	new_shot --verbose 1 $UUT1
	sudo $0 control_program &

	control_script
	wait 
	echo wait complete
	(cd PROJECTS/AFHBA404; sudo ./scripts/get_latstats $DEVNUM)
	;;
esac
